/*
 * PID.h
 * By: Kyle Rodrigues
 *
 */
#ifndef INC_PID_H
#define INC_PID_H_

#include "app_main.h"

// The strut is named PID_t, the typedef is PID
typedef struct PID_t{
	float kp; //proportional error
	float ki; //Integral error
	float error; //error that is  tracking
	float I; //running integral of error
	char *tag;
	float dt; //delta time
	PID_STATE state; // current state of the controller

}PID;

// Define PID (PI) state variables
typedef	struct PID_STATE_t {
	float error; // last error value
	float I;     // running integral of error

	float ref;  // last setpoint
	float fb;   // last feed back
	float u;    // last output
} PID_STATE;

float PID_update (float target, float current, PID *PID_state);

extern PID pid_left;
extern PID pid_right;


#endif /*INC_PID_H_ */
